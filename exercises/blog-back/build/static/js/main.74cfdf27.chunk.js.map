{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","token","getAll","axios","get","then","response","data","setToken","newToken","create","newObject","a","config","headers","Authorization","post","request","login","credentials","App","useState","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","setTitle","setAuthor","url","setUrl","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","loginService","setItem","stringify","addBlog","blogObject","likes","returnedBlog","concat","onSubmit","type","value","name","onChange","target","onClick","removeItem","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74cfdf27.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const request = await axios.post(baseUrl, newObject, config)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, setToken, create }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  //store user login token to local storage\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  })\n\n  //handle the user logging in\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    const user = await loginService.login({\n      username, password,\n    })\n\n    window.localStorage.setItem(\n      'loggedBlogappUser', JSON.stringify(user)\n    )\n\n    blogService.setToken(user.token)\n    setUser(user)\n    setUsername('')\n    setPassword('')\n  }\n\n  //handle the user logging out\n  const handleLogout = (event) => {\n    event.preventDefault()\n    window.localStorage.removeItem('loggedBlogappUser')\n    setUser(null)\n  }\n\n  //adds a new blog\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: title,\n      author: author,\n      url: url,\n      likes: 0,\n    }\n\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setTitle('')\n        setAuthor('')\n        setUrl('')\n      })\n  }\n\n  //form for the user login\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username: <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password: <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  )\n\n  //form for adding a new blog\n  const blogForm = () => (\n    <form onSubmit={addBlog}>\n      <div>\n        title: <input\n          type=\"text\"\n          value={title}\n          name=\"Title\"\n          onChange={({ target }) => setTitle(target.value)}\n        />\n      </div>\n      <div>\n        author: <input\n          type=\"text\"\n          value={author}\n          name=\"Author\"\n          onChange={({ target }) => setAuthor(target.value)}\n        />\n      </div>\n      <div>\n        url: <input\n          type=\"text\"\n          value={url}\n          name=\"URL\"\n          onChange={({ target }) => setUrl(target.value)}\n        />\n      </div>\n      <button type=\"submit\">create</button>\n    </form>\n  )\n\n  /*\n  //display login only if no user is logged in\n  if (user === null) {\n    return (\n      <div>\n        <h2>Log into application</h2>\n        {loginForm()}\n      </div>\n    )\n  }\n  */\n  //return the blog if user is logged in\n  return (\n    <div>\n      <div>\n        <h2>Log into application</h2>\n        {loginForm()}\n      </div>\n    <h2>blogs</h2>\n      <div>\n        <p>{user.name} logged in</p>\n        <button onClick={handleLogout}>logout</button>\n      </div>\n\n      <div>\n        <h2>create new</h2>\n        {blogForm()}\n      </div>\n\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}