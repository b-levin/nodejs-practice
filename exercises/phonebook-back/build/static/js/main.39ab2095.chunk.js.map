{"version":3,"sources":["components/Filter.js","services/persons.js","components/Person.js","components/Persons.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","baseUrl","axios","get","then","response","data","newObject","post","put","id","delete","Person","person","persons","setPersons","name","number","onClick","personToDelete","answer","window","confirm","personService","filter","console","log","handlePersonDelete","Persons","personsToShow","map","key","PersonForm","addPerson","newName","handleNameChange","newNum","handleNumChange","onSubmit","type","Notification","message","className","App","useState","setNewName","setNewNum","filterName","setFilterName","setMessage","useEffect","initialPerons","search","event","target","preventDefault","personObject","duplicatePerson","length","personToUpdate","returnedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39ab2095.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ( { value, onChange}) => {\n    return (\n        <div>\n            filter shown with \n            <input value={value} onChange={onChange}/>\n        </div>\n    )\n}\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = newObject => {\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deletePerson}","import React from 'react'\nimport personService from '../services/persons'\n\nconst Person = ({ person, persons, setPersons }) => {\n    const handlePersonDelete = personToDelete => {\n        const { id, name } = personToDelete\n        const answer = window.confirm(`Delete ${name}?`)\n        if (answer) {\n            personService\n                .deletePerson(id)\n                .then(data => {\n                    setPersons(persons.filter(person => person.id !== id))\n                })\n        }\n        console.log(answer, id)\n    }\n    return (\n        <div>\n        <li>{person.name} {person.number}\n        <button onClick={() => handlePersonDelete(person)}>delete</button> \n        </li>\n        </div>\n    )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ personsToShow, setPersons }) => {\n    return (\n        <ul>\n            {personsToShow.map(person =>\n                <Person key={person.id} person={person} \n                persons={personsToShow} setPersons={setPersons}/>  \n            )}\n        </ul>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, handleNameChange, newNum, handleNumChange}) => {\n    return (\n        <form onSubmit={addPerson}>\n        <div>\n            name: <input \n                value={newName}\n                onChange={handleNameChange}\n            />\n        </div>\n        <div>\n            number: <input \n                value={newNum}\n                onChange={handleNumChange}\n            />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n    const [ persons, setPersons] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNum, setNewNum ] = useState('')\n    const [ filterName, setFilterName ] = useState('')\n    const [ message, setMessage ] = useState('')\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPerons => {\n                setPersons(initialPerons)\n            })\n    }, [])\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const personObject = {\n            name: newName,\n            number: newNum,\n        }\n        const duplicatePerson = persons.filter(\n            person => person.name === newName\n        )\n        if (duplicatePerson.length) {\n            const personToUpdate = duplicatePerson[0]\n            const replace = window.confirm(\n                `${personToUpdate.name} is already added to the phonebook. Replace the old number with the new one?`\n            )\n            if (replace) {\n                personToUpdate.number = newNum\n                personService\n                    .update(personToUpdate)\n                    .then(response => {\n                        setPersons(\n                            persons.map(person => {\n                                return person.id === response.id ? response : person\n                            })\n                        )\n                    })\n                setMessage(`Updated ${personToUpdate.name}`)\n            }\n        } else {\n            personService\n                .create(personObject)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                    setNewName('')\n                    setNewNum('')\n                })\n            setMessage(`Added ${personObject.name}`)\n        }\n    }\n\n    const handleNameChange = (event) => {\n        console.log(event.target.value)\n        setNewName(event.target.value)\n    }\n\n    const handleNumChange = (event) => {\n        console.log(event.target.value)\n        setNewNum(event.target.value)\n    }\n\n    const handleFilterNameChange = (event) => {\n        setFilterName(event.target.value)\n    }\n\n    const personsToShow = filterName\n        ? persons.filter(person => person.name.search(filterName) !== -1)\n        : persons;\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message} />\n            <Filter value={filterName} onChange={handleFilterNameChange} />\n            <h3>add a new</h3>\n            <PersonForm addPerson={addPerson} newName={newName} \n            handleNameChange={handleNameChange} newNum={newNum} handleNumChange={handleNumChange}/>\n            <h3>Numbers</h3>\n            <Persons personsToShow={personsToShow} setPersons={setPersons}/>\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}